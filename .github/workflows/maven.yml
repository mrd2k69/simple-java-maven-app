# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD for Java App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Update version using mvn release:update-versions
      run: |
        mvn release:update-versions -DautoVersionSubmodules=true # Version update including submodules

    - name: Verify version update
      run: |
        cat pom.xml
        git diff --exit-code pom.xml || echo "Changes detected in pom.xml"

    - name: Commit and push new version
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # commit if there are changes in pom.xml
        git diff --exit-code pom.xml || git commit -am "Update Version"

        # push after changes
        git push

    - name: Build JAR with Maven
      run: mvn -B package --file pom.xml

    - name: Extract version from POM
      id: extract_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          mrd2k69/simple-java-maven-app:${{ env.VERSION }}
          mrd2k69/simple-java-maven-app:latest

  deploy:
    needs: build
    name: deploy image
    runs-on: ubuntu-latest

    steps:
    - name: connect and pull
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo docker run mrd2k69/simple-java-maven-app:latest && exit"
    
